# https://python-poetry.org/docs/libraries/#versioning
# https://pypi.org/project/hcaptcha-challenger/#history

[tool.poetry]
name = "hcaptcha-challenger"
version = "0.7.9-post1"
description = "ðŸ¥‚ Gracefully face hCaptcha challenge with MoE(ONNX) embedded solution."
license = "GPL-3.0-or-later"
authors = ["QIN2DIM <yaoqinse@gmail.com>", "Bingjie Yan <bj.yan.pa@qq.com>"]
readme = "README.md"
homepage = "https://github.com/QIN2DIM/hcaptcha-challenger"
repository = "https://github.com/QIN2DIM/hcaptcha-challenger"
documentation = "https://github.com/QIN2DIM/hcaptcha-challenger"
keywords = ["hcaptcha", "hcaptcha-challenger", "hcaptcha-solver"]
packages = [{ include = "hcaptcha_challenger", format = "sdist" }]
classifiers = [
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
]

[virtualenvs]
# https://python-poetry.org/docs/configuration/#virtualenvsin-project
# Create a `.venv` virtual environment in the project root
in-project = true

# https://python-poetry.org/docs/pyproject/#dependencies-and-dependency-groups
[tool.poetry.dependencies]
python = "^3.8"

# Run `poetry install` in the project root
opencv-python = "^4.8.0.76"
numpy = "^1.21.5"
httpx = "^0.24.1"
onnxruntime = "^1.15.1"
loguru = "*"
pyyaml = "*"

# The following dependencies will not be installed
# when you just run `poetry install` or `pip install hcaptcha-challenger`
undetected-chromedriver = { version = "^3.5.2", optional = true }
webdriver-manager = { version = "^4.0.0", optional = true }
selenium = { version = "*", optional = true }
playwright = { version = "*", optional = true }
PyGithub = { version = "^1.59.1", optional = true }
bs4 = { version = "*", optional = true, source = "pypi" }
torch = [
    { platform = "win32", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp310-cp310-win_amd64.whl", optional = true },
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp310-cp310-linux_x86_64.whl", optional = true }
]
torchvision = [
    { platform = "win32", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp310-cp310-win_amd64.whl", optional = true },
    { platform = "linux", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp310-cp310-win_amd64.whl", optional = true }
]
jupyterlab = { version = "*", optional = true }
notebook = { version = "*", optional = true }
onnx = { version = "*", optional = true }
ultralytics = { version = "==8.0.134", optional = true }
roboflow = { version = "*", optional = true }

[tool.poetry.group.test.dependencies]
pytest = "*"
black = { version = "*", extras = ["jupyter"] }
memory-profiler = "*"

[tool.poetry.extras]
# 1. Running `poetry install -E [extras]` will install the general dependencies
# and specified dependencies at the same time.

# 2. The `-E` parameter can accept multiple extras-names,
# that is, if you only specify one extra, poetry will first uninstall the other extras installed
# and then try to install the extra you specified

# 3. Install all extra dependencies with `--all-extras`.

# Developer: `poetry install -E selenium`
# User: `pip install hcaptcha-challenger[selenium]`
selenium = ["selenium", "undetected-chromedriver", "webdriver-manager"]

# Developer: `poetry install -E playwright`
# User: `pip install hcaptcha-challenger[playwright]`
playwright = ["playwright"]

# Developer: `poetry install -E sentinel`
# --> ci: sentinel
# --> ci: collector
sentinel = ["playwright", "PyGithub"]

# Developer: `poetry install -E istock`
# --> pull open source datasets
istock = ["bs4"]

# Developer: `poetry install -E pytorch -E  lab`
pytorch = ["torch", "torchvision"]
lab = ["jupyterlab", "notebook", "PyGithub", "onnx", "ultralytics", "roboflow"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
